--- hsqldb/bin/hsqldb	2007-03-02 00:28:05.686547133 +0200
+++ hsqldb/bin/hsqldb	2007-03-02 00:30:46.810152595 +0200
@@ -89,6 +89,8 @@
 
 #  -- blaine.simpson@admc.com
 
+. /etc/rc.d/init.d/functions
+
 set +u
 
 # This is only used for recursive invocations.
@@ -101,7 +103,7 @@
 }
 [ -n "$INVOC_PATH" ] && INVOC_PATH="${INVOC_PATH}/"
 
-SYNTAX_MSG="SYNTAX:  ${INVOC_PATH}hsqldb start|stop|stopcompact|restart|restartcmpacted|status"
+SYNTAX_MSG="$0 {start|stop|stopcompact|restart|restartcmpacted|status}"
 
 # You can override any of these default values in your config file:
 
@@ -110,7 +112,7 @@
 SU_ECHO_SECS=1
 # File used as semaphore.  If file is removed, a running pid checker
 # process will exit.
-PIDCHECKER_FLAGFILE=/tmp/pidchecker.run
+PIDCHECKER_FLAGFILE=/var/run/hsqldb.pidchecker
 # The following settings get overridden by optional setting in the config file.
 # Time to allow for JVM to die after all HSQLDB instances stopped.
 MAX_TERMINATE_SECS=1
@@ -175,7 +177,7 @@
 }
 
 [ $# -eq 1 ] || {
-    echo "$SYNTAX_MSG" 1>&2
+    msg_usage "$SYNTAX_MSG"
     exit 4
 }
 
@@ -262,9 +264,6 @@
     exit 2
 }
 
-# "chown" lives here on some UNIXes.
-PATH="$PATH:/usr/sbin"
-
 # Make a good effort (but not bullet-proof) check on permissions of the
 # auth file.  Unfortunately, if auth-file is not specified, this depends
 # upon both (a) $HOME being set; and (b) SqlToolSprayer and SqlTool defaults.
@@ -347,8 +346,17 @@
             org.hsqldb.util.SqlToolSprayer --
     ;;
     start)
+        # Check if the service is already running?
+        if [ -f /var/lock/subsys/hsqldb ]; then
+            msg_already_running hsqldb
+            exit 0
+        fi
+
+        msg_starting hsqldb; busy; echo
+
         [ -n "$HSQLDB_PID" ] && {
-        echo "There is already a hsqldb server running with pid $HSQLDB_PID." 1>&2
+            fail
+            echo "There is already a hsqldb server running with pid $HSQLDB_PID." 1>&2
             exit 1
         }
         TLS_SWITCHES=
@@ -356,10 +364,12 @@
         TLS_SWITCHES="-Djavax.net.ssl.keyStore=$TLS_KEYSTORE -Djavax.net.ssl.keyStorePassword=$TLS_PASSWORD"
         if [ -n "$HSQLDB_OWNER" ]; then
             touch "$PIDFILE" || {
+                fail
                 echo "Failed to create pid file" 1>&2
                 exit 1
             }
             chown "$HSQLDB_OWNER" "$PIDFILE" || {
+                fail
                 echo "Failed to chown pid file to '$HSQLDB_OWNER'" 1>&2
                 exit 1
             }
@@ -369,6 +379,7 @@
             nohup su "$HSQLDB_OWNER" -c "cd '$SERVER_HOME' && echo "'$$'" > '$PIDFILE' && exec '$JAVA_EXECUTABLE' $SERVER_JVMARGS $TLS_SWITCHES -classpath '${SERVER_ADDL_CLASSPATH}${HSQLDB_JAR_PATH}' org.hsqldb.util.MainInvoker org.hsqldb.$TARGET_CLASS $INVOC_ADDL_ARGS" >> "$LOGFILE" 2>&1 &
         else
             cd "$SERVER_HOME" || {
+                fail
                 echo "Failed to cd to '$SERVER_HOME'" 1>&2
                 exit 1
             }
@@ -400,6 +411,7 @@
         # There are many reasons why we could fail to read the pid file,
         # but regardless of why, the pid file does not contain a valid pid.
         touch "$PIDCHECKER_FLAGFILE" || {
+            fail
             echo "Failed to touch file '$PIDCHECKER_FLAGFILE'" 1>&2
             exit 1
         }
@@ -423,14 +435,24 @@
             org.hsqldb.util.SqlToolSprayer -- && {
             rm -f "$PIDCHECKER_FLAGFILE"
             echo "org.hsqldb.$TARGET_CLASS started with pid `cat $PIDFILE`"
+            ok
+            touch /var/lock/subsys/hsqldb
             exit 0
         }
         rm -f "$PIDCHECKER_FLAGFILE"
+        fail
         echo "Failed to start org.hsqldb.$TARGET_CLASS.
 See log file '$LOGFILE'." 1>&2
         exit 1
     ;;
     stop|stopcompact)
+        if [ ! -f /var/lock/subsys/hsqldb ]; then
+            msg_not_running hsqldb
+            exit 0
+        fi
+
+        msg_stopping hsqldb; busy; echo
+
         [ "$COMMAND" = stopcompact ] && SHUTDOWN_OPTION='compact'
         [ -n "$HSQLDB_PID" ] || {
             echo "I don't know of any running hsqldb server." 1>&2
@@ -454,21 +476,29 @@
+            fail
             echo "WARNING:  hsqldb is still running!" 1>&2
             exit 1
         }
         rm -f "$PIDFILE" || {
+            fail
             echo "Failed to remove pid file '$PIDFILE'" 1>&2
             exit 1
         }
         echo "Successful shutdown ${SHUTDOWN_OPTION} (for the $TARGET_CLASS process)!"
+        ok
+        rm -f /var/lock/subsys/hsqldb
         exit 0
     ;;
     restart|restartcompacted)
-        STOP_COMMAND=stop
-        [ "$COMMAND" = restartcompacted ] && STOP_COMMAND=stopcompact
-        "${INVOC_PATH}"hsqldb $STOP_COMMAND || exit $?
+        if [ -f /var/lock/subsys/hsqldb ]; then
+            STOP_COMMAND=stop
+            [ "$COMMAND" = restartcompacted ] && STOP_COMMAND=stopcompact
+            "${INVOC_PATH}"hsqldb $STOP_COMMAND || exit $?
+        fi
         exec "${INVOC_PATH}"/hsqldb start
     ;;
     *)
-        echo "$SYNTAX_MSG" 1>&2
-        exit 5
+        msg_usage "$SYNTAX_MSG"
+        exit 3
     ;;
 esac
+
+# vim:ts=4:sw=4:et
